type User {
  id: ID!
  fullName: String!
  username: String!
  roles: [String!]!
  DOB: String
  gender: Gender
  phone: String
  email: String!
  location: String
  country: String
  state: String
  city: String
  cluster: Cluster
  cell: Cell
  bookmarkedContent: [ID]
  contributionHistory: [Contribution]
  spiritualGoals: [String]
  token: String
  # password: String!
  # firstName: String
  # surname: String
  # otherNames: String
}
enum Gender {
  Male
  Female
}

type LoginResponse {
  message: String
  token: String
}

input UserInput {
  fullName: String
  username: String!
  DOB: String
  gender: Gender
  location: String
  email: String!
  phone: String
  password: String!
  confirmPassword: String!
  roles: [String!]!
  country: String
  state: String!
  city: String
  clusterId: ID
  cellId: ID
  bookmarkedContent: [ID]
  spiritualGoals: [String]
  # otherNames: String
  # firstName: String
  # surname: String
}
input updateUserInput {
  fullName: String
  username: String
  DOB: String
  gender: Gender
  email: String
  phone: String
  country: String
  state: String
  location: String
  city: String
  clusterId: ID
  cellId: ID
  bookmarkedContent: [ID]
  spiritualGoals: [String]
  # firstName: String
  # surname: String
  # otherNames: String
}

input LoginUserInput {
  email: String!
  password: String!
}

type DeleteUserResponse {
  success: Boolean!
  message: String!
  deletedUser: User
  deletedAt: String
}

input changePasswordInput {
  newPassword: String
  oldPassword: String
}

type logOutResponse {
  message: String!
  success: Boolean!
  loggedOutUser: User
  loggedOutAt: String
}

type updateUserPasswordResponse {
  message: String
}

# ! -----------------Queries------------------------------

type Query {
  users: [User!]!
  user(id: String): User
}

#! ------------------mutations --------------------------

type Mutation {
  deleteUser(id: String): DeleteUserResponse
  updateUser(user: updateUserInput!): User!
  createUser(user: UserInput!): User!
  loginUser(user: LoginUserInput!): LoginResponse!
  updateUserPassword(
    passwordData: changePasswordInput
  ): updateUserPasswordResponse
  logoutUser: logOutResponse
}
